name: Release LXD Image

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID of build to release'
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_SERVICE_SDK_AUTH }}
      - name: Download Artifact
        id: download_artifact
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           RUN_ID: ${{ github.event.inputs.run_id }}
        run: images/download-latest.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: r${{ github.run_number }}
          release_name: "r${{ github.run_number }}: ${{ steps.download_artifact.outputs.release_name }}"
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu-vm.tar
          asset_name: ubuntu-vm.tar
          asset_content_type: application/tar
      - name: Update LXD Pointer
        env:
           SECRET_CDN_ENDPOINT_RESOURCE_ID: ${{ secrets.CDN_ENDPOINT_RESOURCE_ID }}
           LXD_URL: ${{ steps.upload_asset.outputs.browser_download_url }}
           LXD_SHA: ${{ steps.download_artifact.outputs.lxd_sha }}
        run: images/update-lxd.sh